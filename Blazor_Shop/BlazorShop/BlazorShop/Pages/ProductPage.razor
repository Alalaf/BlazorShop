@page "/Product"
@using BlazorShop.Data
@using BlazorShop.Services
@using BlazorInputFile
@using System.IO

@inherits OwningComponentBase<ProductServices>


@if (products == null)
{
    <p><em>No Product Yet Please Add</em></p>
}
else
{
    <div class="container border p-3">
        <div class="row">
            <div class="col-5">
                <h3 class="text-info">Products List</h3>
            </div>
            <div class="col-3">
                <button class="btn btn-outline-info form-control" @onclick="AddNewProduct">Add New Product</button>
            </div>
        </div>
        <div class="row pt-4">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Price</th>
                        <th>Shade Color</th>
                        <th>Category</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var obj in products)
                    {
                    <tr>
                        <td>@obj.Name</td>
                        <td>@obj.Price</td>
                        <td>@obj.ShadeColor</td>
                        <td>@obj.Category.Name</td>
                        <td>
                            <button class="btn btn-primary" style="width:150px" @onclick="(()=> EditProduct(obj))">
                                Edit
                            </button>
                        </td>
                    </tr>
                    }


                </tbody>
            </table>
        </div>
    </div>
}

@if (showpopup)
{
    <div class="modal" tabindex="-1" style="display:block" role="dialog">
        <EditForm Model="objproduct" OnValidSubmit="@ValidSubmit">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h3 class="text-info">@(objproduct.Id !=0 ? "Update" : "Create") Product</h3>
                        <button type="button" class="close" @onclick="closepopup">
                            <span aria-hidden="true">X</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <DataAnnotationsValidator/>
                        
                        <div class="row">
                            <div class="col-9">
                                <div class="row py-2">
                                    <div class="col-4">
                                        Category
                                    </div>
                                    <div class="col-8">
                                        <select @onchange="CategorySelection" class="form-control">
                                            @foreach (var cat in categories)
                                            {
                                                <option value="@cat.Id" 
                                                   selected="@(cat.Id == objproduct.CategoryId? true: false)"
                                                 >
                                                   @cat.Name
                                                 
                                                </option>
                                            }
                                        </select>
                                    </div>
                                </div>
                                <div class="row py-2">
                                    <div class="col-4">
                                        Name
                                    </div>
                                    <div class="col-8">
                                        <input type="text" class="form-control" @bind="objproduct.Name" />
                                        <ValidationMessage For="@(()=>objproduct.Name)"></ValidationMessage>
                                    </div>
                                </div>
                                <div class="row py-2">
                                    <div class="col-4">
                                        Price
                                    </div>
                                    <div class="col-8">
                                        <input type="text" class="form-control" @bind="objproduct.Price" />
                                        <ValidationMessage For="@(()=>objproduct.Price)"></ValidationMessage>
                                    </div>
                                </div>
                                <div class="row py-2">
                                    <div class="col-4">
                                        Color
                                    </div>
                                    <div class="col-8">
                                        <input type="text" class="form-control" @bind="objproduct.ShadeColor" />
                                    </div>
                                </div>
                                <div class="row py-2">
                                    <div class="col-4">
                                        Image
                                    </div>
                                    <div class="col-8">
                                        <InputFile OnChange="HandleSelection"></InputFile>
                                    </div>
                                </div>
                                <div class="row py-2">

                                    <div class="offset-4 col">
                                        <button type="submit" class="btn btn-primary form-control">Save</button>
                                    </div>
                                    @if (objproduct.Id > 0)
                                    {
                                        <div class="offset-4 col">
                                            <button type="submit" class="btn btn-danger form-control" @onclick="DeleteProduct">Delete</button>
                                        </div>
                                    }
                                </div>
                            </div>
                            <div class="col-3">
                                <img src="@DisplayImage(objproduct.Image)" width="100%"/>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </EditForm>
    </div>

}



@code {
    List<Product> products;
    List<Category> categories;
    bool showpopup = false;
    Product objproduct = new Product();
    public byte[] imageuplode { get; set; }


    protected override void OnInitialized()
    {
        products = Service.GetProduct();
    }

    void AddNewProduct()
    {
        objproduct = new Product();
        categories = Service.GetCategoryList();
        objproduct.CategoryId = categories[0].Id;
        showpopup = true;
    }

    void EditProduct(Product product)
    {
        objproduct = product;
        categories = Service.GetCategoryList();
        showpopup = true;
    }

    void DeleteProduct()
    {
        showpopup = false;
        var result = Service.DeleteProduct(objproduct);
        products.Clear();
        products = Service.GetProduct();
    }

    void closepopup()
    {
        showpopup = false;
    }

    void ValidSubmit()
    {
        var result = false;
        showpopup = false;
        if(imageuplode != null)
        {
            objproduct.Image = imageuplode;
            imageuplode = null;
        }
        if (objproduct.Id>0)
        {
            result = Service.UpdateProduct(objproduct);
        }
        else
        {
            result = Service.CreateProduct(objproduct);
        }
        products = Service.GetProduct();
    }

    async Task HandleSelection(IFileListEntry[] files)
    {
        var file = files.FirstOrDefault();
        if(file != null)
        {
            var ms = new MemoryStream();
            await file.Data.CopyToAsync(ms);
            imageuplode = ms.ToArray();
        }
    }

    string DisplayImage(byte[] image)
    {
        if(image != null)
        {
            var base64 = Convert.ToBase64String(image);
            var finalstr = string.Format("data:image/jpg;base64,{0}", base64);
            return finalstr;
        }
        return "";
    }

    void CategorySelection(ChangeEventArgs e)
    {
        if(int.TryParse(e.Value.ToString(),out int id))
        {
            objproduct.CategoryId = id;
        }
    }
}
